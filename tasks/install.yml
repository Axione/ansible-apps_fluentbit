---
- name: "Check if executable exist"
  stat:
    path: "{{ fluentbit_binary_name }}"
  register: fluentbit_binary

- name: "Check version"
  command: "{{ fluentbit_binary_name }} --version | grep -oE '[^ ]+$'"
  changed_when: false
  register: fluentbit_binary_version
  when: fluentbit_binary.stat.exists

- when: not fluentbit_binary.stat.exists or (fluentbit_binary_version is defined and fluentbit_version not in fluentbit_binary_version.stdout)
  block:
    - name: "Ensure directories exists"
      file:
        path: '{{ item }}'
        state: directory
        mode: 0755
      with_items:
        - "{{ fluentbit_log_dir }}"

    - name: "Make sqlitle human readable db file"
      copy:
        dest: "/root/.sqliterc"
        content: |
          .headers on
          .mode column
          .width 5 82 12 12 10
        owner: root
        group: root
        mode: '0644'

    - name: "Install ca-certificates package"
      package:
        name: ca-certificates
        state: present

    - name: "Download the version ({{ fluentbit_version }})"
      get_url:
        url: '{{ fluentbit_tgz_url }}'
        dest: /tmp/{{ fluentbit_tgz }}
        timeout: 120
        mode: 0644

    - name: "Unarchive {{ fluentbit_tgz }}"
      unarchive:
        remote_src: true
        src: "/tmp/{{ fluentbit_tgz }}"
        dest: "/tmp/"
        mode: '1777'

    - name: "Install build requirement packages"
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - cmake
        - g++
        - flex
        - bison
        - libssl-dev
        - libsystemd-dev
        - autoconf
        - libsasl2-dev

    - name: "Configure source"
      command: cmake -DFLB_OUT_KAFKA=On -DFLB_HTTP_SERVER=on -DFLB_EXAMPLES=off ..
      args:
        chdir: "/tmp/fluent-bit-{{ fluentbit_version }}/build/"

    - name: "Build the sources (5min)"
      make:
        chdir: "/tmp/fluent-bit-{{ fluentbit_version }}/build/"


    #    ### Probleme with glic when building locally
    #    - name: "LOCAL - Download the version ({{ fluentbit_version }})"
    #      become: false
    #      get_url:
    #        url: '{{ fluentbit_tgz_url }}'
    #        dest: /tmp/{{ fluentbit_tgz }}
    #        timeout: 120
    #        mode: 0644
    #      delegate_to: localhost
    #      run_once: true
    #
    #    - name: "LOCAL - Unarchive {{ fluentbit_tgz }}"
    #      become: false
    #      unarchive:
    #        remote_src: true
    #        src: "/tmp/{{ fluentbit_tgz }}"
    #        dest: "/tmp/"
    #        mode: '1777'
    #      delegate_to: localhost
    #      run_once: true
    #
    #    - name: "LOCAL - Add options on make"
    #      become: false
    #      command: cmake -DFLB_OUT_KAFKA=On -DFLB_HTTP_SERVER=on -DFLB_SHARED_LIB=off -DFLB_EXAMPLES=off ..
    #      args:
    #        chdir: "/tmp/fluent-bit-{{ fluentbit_version }}/build/"
    #      delegate_to: localhost
    #      run_once: true
    #
    #    - name: "LOCAL - Build the sources (5min)"
    #      become: false
    #      make:
    #        chdir: "/tmp/fluent-bit-{{ fluentbit_version }}/build/"
    #      delegate_to: localhost
    #      run_once: true

    - name: "Stop fluent-bit service if present"
      service:
        name: fluent-bit
        state: stopped
      when: fluentbit_binary.stat.exists

    - name: "Copy executable to {{ fluentbit_binary_name }}"
      copy:
        src: "/tmp/fluent-bit-{{ fluentbit_version }}/build/bin/fluent-bit"
        dest: "{{ fluentbit_binary_name }}"
        mode: 0755
        remote_src: true
      notify:
        - start fluent-bit

    - name: "Clean source temp directory"
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "/tmp/fluent-bit-{{ fluentbit_version }}"
        - "/tmp/{{ fluentbit_tgz }}"

    - name: "Modify hard nofile limits for root domain"
      pam_limits:
        domain: root
        limit_type: '-'
        limit_item: nofile
        value: "{{ fluentbit_nofile_limit }}"

    - name: "Modify hard nofile limits for wildcard domain"
      pam_limits:
        domain: '*'
        limit_type: '-'
        limit_item: nofile
        value: "{{ fluentbit_nofile_limit }}"

    - name: "Create config folder /etc/fluent-bit/"
      file:
        path: "{{ fluentbit_install_dir }}"
        state: directory
        mode: '0755'

    - name: "Create a systemd init script"
      copy:
        src: fluent-bit.service
        dest: /lib/systemd/system/
        owner: root
        group: root
        mode: '0644'

    - name: "Enable fluent-bit service"
      service:
        name: fluent-bit
        enabled: true
        state: started
        daemon_reload: true


- name: "Create config file {{ fluentbit_install_dir }}/fluent-bit.conf"
  template:
    src: fluent-bit.conf.j2
    dest: "{{ fluentbit_install_dir }}/fluent-bit.conf"
    owner: root
    group: root
    mode: '0644'
  notify:
    - stop fluent-bit
    - start fluent-bit

- name: "Create parser file {{ fluentbit_install_dir }}/parsers.conf"
  template:
    src: parsers.conf.j2
    dest: "{{ fluentbit_install_dir }}/parsers.conf"
    owner: root
    group: root
    mode: '0644'
  notify:
    - stop fluent-bit
    - start fluent-bit
