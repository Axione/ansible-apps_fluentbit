---
- name: "Check if executable exist"
  stat:
    path: "{{ fluentbit_binary_name }}"
  register: fluentbit_binary

- name: "Check version"
  command: "{{ fluentbit_binary_name }} --version | grep -oE '[^ ]+$'"
  changed_when: false
  register: fluentbit_binary_version
  when: fluentbit_binary.stat.exists

- when: not fluentbit_binary.stat.exists or (fluentbit_binary_version is defined and fluentbit_version not in fluentbit_binary_version.stdout)
  block:
    - name: "Make sqlitle human readable db file"
      copy:
        dest: "/root/.sqliterc"
        content: |
          .headers on
          .mode column
          .width 5 82 12 12 10
        owner: root
        group: root
        mode: '0644'

    - name: "Download the version ({{ fluentbit_version }})"
      become: false
      get_url:
        url: '{{ fluentbit_tgz_url }}'
        dest: /tmp/{{ fluentbit_tgz }}
        timeout: 120
        mode: 0644
      delegate_to: localhost
      run_once: true

    - name: "Unarchive {{ fluentbit_tgz }}"
      become: false
      unarchive:
        remote_src: yes
        src: "/tmp/{{ fluentbit_tgz }}"
        dest: "/tmp/"
        mode: '1777'
      delegate_to: localhost
      run_once: true

    - name: "Add options on make"
      become: false
      command: cmake -DFLB_OUT_KAFKA=On -DFLB_HTTP_SERVER=on ..
      args:
        chdir: "/tmp/fluent-bit-{{ fluentbit_version }}/build/"
      delegate_to: localhost
      run_once: true

    - name: "Build the sources (5min)"
      become: false
      make:
        chdir: "/tmp/fluent-bit-{{ fluentbit_version }}/build/"
      delegate_to: localhost
      run_once: true

    - name: "Stop fluent-bit service if present"
      systemd:
        name: fluent-bit
        state: stopped
      ignore_errors: yes
      when: fluentbit_binary.stat.exists

    - name: "Copy executable to {{ fluentbit_binary_name }}"
      copy:
        src: "/tmp/fluent-bit-{{ fluentbit_version }}/build/bin/fluent-bit"
        dest: "{{ fluentbit_binary_name }}"
        mode: 0755
      notify: restart fluent-bit

    - name: "Modify hard nofile limits for wildcard domain"
      pam_limits:
        domain: root
        limit_type: '-'
        limit_item: nofile
        value: "{{ fluentbit_nofile_limit }}"

    - name: "Modify hard nofile limits for wildcard domain"
      pam_limits:
        domain: '*'
        limit_type: '-'
        limit_item: nofile
        value: "{{ fluentbit_nofile_limit }}"

    - name: "Create config folder /etc/fluent-bit/"
      file:
        path: "{{ fluentbit_install_dir }}"
        state: directory
        mode: '0755'

    - name: "Create a systemd init script"
      copy:
        src: fluent-bit.service
        dest: /lib/systemd/system/
        owner: root
        group: root
        mode: '0644'

    - name: "Enable fluent-bit service"
      systemd:
        name: fluent-bit
        enabled: yes
        state: started
        daemon_reload: yes


- name: "Create config file {{ fluentbit_install_dir }}/fluent-bit.conf"
  template:
    src: fluent-bit.conf.j2
    dest: "{{ fluentbit_install_dir }}/fluent-bit.conf"
    owner: root
    group: root
    mode: '0644'
  notify:
    - restart fluent-bit

- name: "Create parser file {{ fluentbit_install_dir }}/parsers.conf"
  template:
    src: parsers.conf.j2
    dest: "{{ fluentbit_install_dir }}/parsers.conf"
    owner: root
    group: root
    mode: '0644'
  notify:
    - restart fluent-bit
